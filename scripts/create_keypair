#!/usr/bin/env ruby

require "fileutils"
require "fog"

def usage
  $stderr.puts "USAGE:"
  $stderr.puts "  For AWS: create_keypair aws ACCESS_KEY SECRET_KEY REGION KEYNAME"
  $stderr.puts "  For OpenStack: create_keypair openstack OS_USERNAME OS_PASSWORD OS_TENANT_NAME OS_AUTH_URL KEYNAME"
  exit 1
end

provider = ARGV.shift
usage unless provider
case provider.upcase
  when "AWS"
    access_key = ARGV.shift
    secret_key = ARGV.shift
    region     = ARGV.shift
    fog_options = {
      :provider => "AWS",
      :region => region,
      :aws_access_key_id => access_key,
      :aws_secret_access_key => secret_key,
    }
  when "OPENSTACK"
    os_username    = ARGV.shift
    os_password    = ARGV.shift
    os_tenant_name = ARGV.shift
    os_auth_url    = ARGV.shift
    fog_options = {
      :provider => "OpenStack",
      :openstack_username => os_username,
      :openstack_api_key => os_password,
      :openstack_tenant => os_tenant_name,
      :openstack_auth_url => os_auth_url,
    }
  else usage
end
keypair_name = ARGV.shift
usage unless keypair_name

def create_keypair(keypair_name, options={})
  user = options.delete(:user) || "vcap"
  pem = "/home/#{user}/.ssh/#{keypair_name}.pem"
  if File.exist?(pem)
    $stderr.puts "#{options[:provider]} key #{keypair_name} already created at #{pem}"
  else
    connection = Fog::Compute.new(options)
    kp = connection.key_pairs.create(:name => keypair_name)
    kp.write(pem)
    FileUtils.chown user, user, pem
    $stdout.puts "#{options[:provider]} key #{keypair_name} created at #{pem}"
  end
  pem
end

create_keypair(keypair_name, fog_options)
