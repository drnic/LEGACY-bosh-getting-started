#!/usr/bin/env ruby

require "fileutils"

provider   = ARGV.shift
access_key = ARGV.shift
secret_key = ARGV.shift
region     = ARGV.shift
ipaddress  = ARGV.shift
password   = ARGV.shift

def usage
  $stderr.puts "USAGE: create_chefbosh_yml aws ACCESS_KEY SECRET_KEY REGION IP_ADDRESS RAW_PASSWORD"
  exit 1
end

usage unless provider
usage unless provider.upcase == 'AWS'
usage unless password

def aws_config_yml(access_key, secret_key, region, ipaddress, password, options={})

  security_group = options[:security_group] || 'default'
  key_name       = options[:key_name] || 'fog_default'
  ssh_user       = 'vcap'

<<-YAML
---
roles:
  - blobstore:    #{ipaddress}
  - nats:         #{ipaddress}
  - postgresql:   #{ipaddress}
  - redis:        #{ipaddress}
  - director:     #{ipaddress}
  - aws_registry: #{ipaddress}
user: #{ssh_user}
paths:
  repo_cache: /var/vcap/deploy/repos
  cookbooks: /var/vcap/deploy/cookbooks
  chef: /var/vcap/deploy/chef
chef_node:
  director:
    runner: root
    aws:
      access_key_id:     #{access_key}
      secret_access_key: #{secret_key}
      ec2_endpoint: ec2.#{region}.amazonaws.com
      default_key_name: #{key_name}
      default_security_groups: ["#{security_group}"]
      max_retries: 2
  aws_registry:
    endpoint: http://admin:#{password}@#{ipaddress}:25777
    http:
      user: admin
      passwrd: #{password}
YAML
end

yml = aws_config_yml(access_key, secret_key, region, ipaddress, password)


chefbosh_yml = File.expand_path("config.yml")
File.open(chefbosh_yml, "w") { |f| f << yml }
$stderr.puts "Created #{chefbosh_yml}..."
